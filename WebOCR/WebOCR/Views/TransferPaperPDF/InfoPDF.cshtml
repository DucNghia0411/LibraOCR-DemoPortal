@{
    ViewData["Title"] = "Expect Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WebOCR.Models.FileForm;
<!-- Page-Title -->
<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box">
            <div class="btn-group float-left m-t-b-10">
                <ul class="des hide-phone p-0 m-0">
                    <li><img src="/assets/icons/file.png" class="center" /><p><b>Step 1:</b> Upload File</p></li>
                    <li><img src="/assets/icons/right-arrows.png" class="center m-b-10" /></li>
                    <li><img src="/assets/icons/submit.png" class="center" /><p><b>Step 2:</b> Start OCR</p></li>
                    <li><img src="/assets/icons/right-arrows.png" class="center m-b-10" /></li>
                    <li><img src="/assets/icons/result.png" class="center" /><p><b>Step 3:</b> Get Result</p></li>
                    <li><img src="/assets/icons/right-arrows.png" class="center m-b-10" /></li>
                    <li><img src="/assets/icons/diskette.png" class="center" /><p><b>Step 4:</b> Save</p></li>
                </ul>
            </div>
            <div class="btn-group float-right m-t-b-10 p-t-15">
                <ol class="breadcrumb hide-phone p-0 m-0">
                    <li class="breadcrumb-item"><a href="#">Libra</a></li>
                    <li class="breadcrumb-item"><a href="#">Transfer Paper</a></li>
                    <li class="breadcrumb-item active">Expect Information</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- end page title end breadcrumb -->
<form id="upload" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-12">
            <div class="card m-b-10">
                <div class="card-body p-t-5">

                    <div class="row">
                        <div class="col-sm-6 file-upload">
                            <label for="example-text-input" class="col-form-label"><b>1:</b> SELECT FILE NEED TO EXPECT INFORMATION </label>
                            <div class="file-select">
                                <div class="file-select-button" id="fileName">Choose File</div>
                                <div class="file-select-name" id="noFile">No file chosen...</div>
                                <input type="file" asp-for="File" id="inputFile" accept="application/pdf" onchange="showPreviewPDF(event);">
                            </div>
                        </div>
                        <div class="col-sm-2 text-center m-t-36">
                            <div class="row">
                                <label class="col-sm-2 m-t-10"><b>2:</b></label>
                                <button name="send" type="submit" id="submit" runat="server" class="col-sm-10 btn btn-primary btn-lg btn-block">
                                    <i class="fa fa-mouse-pointer"></i>  <b>Submit</b>
                                </button>
                            </div>
                        </div>
                        <div class="col-sm-2 text-center m-t-36">
                            <div class="row">
                                <label class="col-sm-2 m-t-10"><b>4:</b></label>
                                <button id="SaveResult" class="col-sm-10 btn btn-primary btn-lg btn-block">
                                    <i class="fa fa-save"></i>  <b>Save</b>
                                </button>
                            </div>
                        </div>
                        <div class="col-sm-2 text-center m-t-36">
                            <a id="Return" asp-controller="TransferPaperPDF" asp-action="Index" class="btn btn-primary btn-lg btn-block">
                                <i class="fa fa-rotate-left"></i>  Return
                            </a>
                        </div>
@*                        <div class="col-sm-2 text-center  m-t-36">
                            <button id="ClearResult" class="btn btn-primary btn-lg btn-block">
                                <i class="fa fa-eraser"></i>  Clear
                            </button>
                        </div>  *@            
                    </div>
                </div>
            </div>
        </div> <!-- end col -->
    </div> <!-- end row -->

    <div class="row">
        <div class="col-md-6">
            <div class="card mini-stat">
                <div class="p-l-r-20 bg-primary text-white">
                    <div class="mini-stat-icon">
                        <i class="mdi mdi-image float-right mb-0"></i>
                    </div>
                    <h6 class="text-uppercase mb-0">Image Preview</h6>
                </div>
                <div class="card-body p-1r">
                    <div class="text-muted">
                        <canvas id="pdfViewer" class="img-fluid center max-height"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card mini-stat">
                <div class="p-l-r-20 bg-primary text-white">
                    <div class="mini-stat-icon">
                        <i class="mdi mdi-file-check float-right mb-0"></i>
                    </div>
                    <h6 class="text-uppercase mb-0">OCR Result</h6>
                </div>
                <div class="btn-group btn-group-toggle">
                    <a class="btn btn-outline-primary tab">HTML</a>
                    <a class="btn btn-outline-primary tab">Json</a>
                </div>
                <div class="card-body p-1r">
                    <div class="text-muted">
                        <div id="HTMLVal">
                            <pre id="textocr" class="tab-content mh-299"></pre>
                        </div>
                        <div id="JsonVal">
                            <pre id="jsonocr" class="tab-content show-content  mh-299"></pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    $('#inputFile').bind('change', function() {
        var filename = $("#inputFile").val();
        if (/^\s*$/.test(filename)) {
            $(".file-upload").removeClass('active');
            $("#noFile").text("No file chosen...");
        }
        else {
            $(".file-upload").addClass('active');
            $("#noFile").text(filename.replace("C:\\fakepath\\", ""));
        }
    });

    const tabs = document.querySelectorAll(".tab");
    const tabContents = document.querySelectorAll(".tab-content");

    for (let i = 0; i < tabs.length; i++) {
        const tab = tabs[i];
        tab.addEventListener("click", switchClass);
    }

    function switchClass(e) {
        e.preventDefault();
        for (let i = 0; i < tabs.length; i++) {
            const tab = tabs[i];
            tab.classList.remove("active");
            tabContents[i].classList.remove("show-content");
        }

        const index = Array.prototype.slice.call(e.target.parentElement.children).indexOf(e.target)

        e.target.classList.add("active");
        tabContents[index].classList.add("show-content");
    }

    $(document).ready(function() {
        $('#inputFile').on('change', function(evt) {
            var input = document.getElementById('inputFile');

            if (input.files && input.files[0]) {
                let reader = new FileReader();
                reader.onload = (e) => {
                    let imgData = e.target.result;
                    let imgName = input.files[0].name;
                }
                reader.readAsDataURL(input.files[0]);
            }
        });
    });

    function getSafe(fn, defaultVal) {
      try {
          if (fn() == null) {
              return ''; 
          }
          else {        
              return fn();
          }
      } catch (e) {
        return defaultVal;
      }
    }

    $('#upload').submit(function(e) {
        e.preventDefault();

        if(document.getElementById('inputFile').files.length == 0)
        {
            alertify.error("NO FILES SELECTED!!!");
        }

        var input = document.getElementById('inputFile');
        var formData = new FormData(this);

        $('#submit').html("");
        jQuery('<span>', {
            id: 'loader',
            class: 'spinner-border spinner-border-sm',
            role: 'status'
        }).appendTo('#submit');
        $('#submit').append("...Loading");
        $('#submit').prop("disabled", true);
        $.ajax({
            type: 'POST',
            url: '/TransferPaperPDF/GetInfoPDF',
            dataType: 'json',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function(response) {
                try {
                    $('#loader').hide();
                    if (response == "") {
                        $('#submit').html("Submit");
                        $('#submit').prop("disabled", false);
                        $('#result').val("Empty");
                        return false;
                    }
                    $('#submit').html("Submit");
                    $('#submit').prop("disabled", false);
                    $('#result').text("");
                    document.getElementById("jsonocr").innerHTML = JSON.stringify(response, undefined, 1);
                    let html = "";
                    html += "<div class='textocr'>";
                    html += "<p>" + "<strong>Ngày: </strong>" + (getSafe(() => response[0].date, '')) + "</p>"
                    document.getElementById("textocr").innerHTML = html;
                    alertify.success("DONE!!");
                } catch (err) {
                    console.log('Error: ', err.message);
                    alertify.error("ERROR!!!");
                }
            },
            error: function(e) {
                $('#submit').html("Submit");
                $('#submit').prop("disabled", false);
            }
        });
    });

    $('#SaveResult').click(function(e) {
        e.preventDefault();
        var input = document.getElementById('inputFile');
        var size = Math.round(input.files[0].size / 1024);
        const jsonValue = document.getElementById('jsonocr').innerHTML;
        const htmlValue = document.getElementById('textocr').innerHTML;
        var formData = new FormData();
        formData.append('file', input.files[0]);
        formData.append('imageSize', size);
        formData.append('jsonValue', jsonValue);
        formData.append('htmlValue', htmlValue);

        if (htmlValue.length == 0 || jsonValue.length == 0) {
            alertify.error("PLEASE SUBMIT BEFORE SAVE!!");
        } else {
            $.ajax({
                type: "POST",
                url: "/TransferPaperPDF/SavePDF",
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
                success: function(e) {
                    alertify.success("SAVE SUCCESSFULLY!");
                },
                error: function(err) {
                    console.log(err);
                }
            });
        }
    });

    function showPreviewPDF(e)
    {
        // Loaded via <script> tag, create shortcut to access PDF.js exports.
        var pdfjsLib = window['pdfjs-dist/build/pdf'];
        // The workerSrc property shall be specified.
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://mozilla.github.io/pdf.js/build/pdf.worker.js';

        var file = e.target.files[0]
        if (file.type == "application/pdf") {
            var fileReader = new FileReader();
            fileReader.onload = function () {
                var pdfData = new Uint8Array(this.result);
                // Using DocumentInitParameters object to load binary data.
                var loadingTask = pdfjsLib.getDocument({ data: pdfData });
                loadingTask.promise.then(function (pdf) {

                    // Fetch the first page
                    var pageNumber = 1;
                    pdf.getPage(pageNumber).then(function (page) {

                        var scale = 1.5;
                        var viewport = page.getViewport({ scale: scale });

                        // Prepare canvas using PDF page dimensions
                        var canvas = $("#pdfViewer")[0];
                        var context = canvas.getContext('2d');
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;

                        // Render PDF page into canvas context
                        var renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };
                        var renderTask = page.render(renderContext);
                    });
                }, function (reason) {
                    // PDF loading error
                    console.error(reason);
                });
            };
            fileReader.readAsArrayBuffer(file);
        }
    }

    $('#ClearResult').click(function(e) {
        e.preventDefault();
        $('#ipImageSize').val("");
        $('#ipCreateDate').val("");
        $('#ipImageName').val("");
        var input = document.getElementById('inputFile');
        var canvas = $("#pdfViewer")[0];
        const context = canvas.getContext('2d');
        context.clearRect(0, 0, canvas.width, canvas.height);
        $(".file-upload").removeClass('active');
        $("#noFile").text("No file chosen...");
        document.getElementById("jsonocr").innerHTML = "";
        document.getElementById("textocr").innerHTML = "";
        alertify.success("ALL CLEAR!!");
    });
</script>